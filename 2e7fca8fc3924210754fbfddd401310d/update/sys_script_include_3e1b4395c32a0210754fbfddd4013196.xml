<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_376096_lfp_apps.LFPChoiceExt</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Implements extension point x_376096_lfp_apps.LFPChoiceExt</description>
        <name>LFPChoiceExt</name>
        <script><![CDATA[/* global gs */
/* global Class, GlideRecord, GlideScopedEvaluator */
/* eslint no-undef: "error" */
var LFPChoiceExt = Class.create();
LFPChoiceExt.prototype = {
	initialize: function() {
		const scriptGr = new GlideRecord('sys_rte_eb_script_operation');
		scriptGr.addQuery('sys_id', '80e292c3c3d24210754fbfddd40131f2');
		scriptGr.setLimit(1);
		scriptGr.query();
		if (scriptGr.next()) {
			this.scriptGr = scriptGr;
		} else {
			throw new Error(this.type + ' does not function without script injection');
		}
	},

	createOrUpdateChoice: function (table, element, dependentValue, value, language, valueMap) {
		this.scriptGr.sys_scope = 'global';
		this.scriptGr.script = `
			(function (table, element, dependentValue, value, language, valueMap) {
				var choiceGr = new GlideRecord('sys_choice');
				choiceGr.addQuery('name', table);
				choiceGr.addQuery('element', element);
				choiceGr.addQuery('dependent_value', dependentValue);
				choiceGr.addQuery('value', value);
				choiceGr.addQuery('language', language);
				choiceGr.setLimit(1);
				choiceGr.query();

				var fields = Object.keys(valueMap);
				if (fields.length == 0 || fields.every(function (f) { return !valueMap[f]; })) {
					if (choiceGr.next()) {
						choiceGr.deleteRecord();
					}
				} else {
					if (!choiceGr.next()) {
						choiceGr.newRecord();
						choiceGr.setValue('name', table);
						choiceGr.setValue('element', element);
						choiceGr.setValue('dependent_value', dependentValue);
						choiceGr.setValue('value', value);
						choiceGr.setValue('language', language);
					}

					['label', 'hint', 'sequence'].filter(attr => valueMap.hasOwnProperty(attr)).forEach(attr => {
						choiceGr.setValue(attr, valueMap[attr]);
					});
						
					if (choiceGr.isNewRecord()) {
						choiceGr.setValue('sequence', getChoiceSequence(table, element, dependentValue, value));
						choiceGr.insert();
					} else {
						choiceGr.update();
					}
				}

				function getChoiceSequence(table, element, dependentValue, value) {
					var choiceGr = new GlideRecord('sys_choice');
					choiceGr.addQuery('name', table);
					choiceGr.addQuery('element', element);
					choiceGr.addQuery('dependent_value', dependentValue);
					choiceGr.addQuery('value', value);
					choiceGr.addNotNullQuery('sequence');
					choiceGr.setLimit(1);
					choiceGr.query();
					if (choiceGr.next()) {
						return choiceGr.sequence.toString();
					}
				}
			})(table, element, dependentValue, value, language, JSON.parse(valueMap));
		`;

		new GlideScopedEvaluator().evaluateScript(this.scriptGr, 'script', {
			table: table,
			element: element,
			dependentValue: dependentValue,
			value: value,
			language: language,
			valueMap: JSON.stringify(valueMap)
		});
	},

    type: 'LFPChoiceExt'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>markus.kraus</sys_created_by>
        <sys_created_on>2024-06-01 23:04:26</sys_created_on>
        <sys_id>3e1b4395c32a0210754fbfddd4013196</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>LFPChoiceExt</sys_name>
        <sys_package display_value="Localization Framework+ Scoped Apps" source="x_376096_lfp_apps">2e7fca8fc3924210754fbfddd401310d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Localization Framework+ Scoped Apps">2e7fca8fc3924210754fbfddd401310d</sys_scope>
        <sys_update_name>sys_script_include_3e1b4395c32a0210754fbfddd4013196</sys_update_name>
        <sys_updated_by>markus.kraus</sys_updated_by>
        <sys_updated_on>2024-06-02 00:37:21</sys_updated_on>
    </sys_script_include>
</record_update>
