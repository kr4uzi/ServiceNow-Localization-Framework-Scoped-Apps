<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_376096_lfp_apps.AppLocalizationProcessor</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>The AppLocalizationProcessor is a convenience wrapper of the MetadataLocalizationProcessor which collects all records of a given scope and bundles them together for a single translation run.</description>
        <name>AppLocalizationProcessor</name>
        <script><![CDATA[/* global gs, global, x_376096_lfp_apps */
/* global Class, GlideAggregate, GlideRecord, GlideTableHierarchy, GlideScriptedExtensionPoint, Set */
/* eslint no-undef: "error" */
var AppLocalizationProcessor = Class.create();
AppLocalizationProcessor.prototype = Object.extendsObject(global.LFArtifactProcessorSNC, {
	initialize: function () {
		global.LFArtifactProcessorSNC.prototype.initialize.apply(this, arguments);
	},

    getTranslatableContent: function(params) { 
		const builder = new global.LFDocumentContentBuilder('v1', params.language, params.sysId, params.tableName, params);
		const metadataProcessor = new x_376096_lfp_apps.MetadataLocalizationProcessor();
        const recordGa = new GlideAggregate('sys_metadata');
		recordGa.addQuery('sys_scope', params.sysId);
		recordGa.groupBy('sys_class_name');
		recordGa.orderBy('sys_class_name');
		recordGa.query();
		while (recordGa.next()) {
			const recordTable = recordGa.getValue('sys_class_name');
			const metadataGr = new GlideRecord('sys_metadata');
			metadataGr.addQuery('sys_class_name', recordTable);
			metadataGr.addQuery('sys_scope', params.sysId);
			metadataGr.orderByDesc('sys_updated_on');
			metadataGr.query();
			while (metadataGr.next()) {
				const metadataParams = JSON.parse(JSON.stringify(params));
				metadataParams.scope = params.sysId;
				metadataParams.sysId = metadataGr.getUniqueValue();
				metadataParams.tableName = metadataGr.getValue('sys_class_name');
				const content = metadataProcessor.getTranslatableContent(metadataParams);
				content.getElements().forEach(element => builder.processElement(element));
			}
		}

		const result = new global.LFDocumentContentBuilder('v1', params.language, params.sysId, params.tableName, params);
		// translated fields and ui messages need to be unique and only appear once in the translation
		// in addition empty fields should be removed
		const translatedFields = new Set();
		const uiMessageKeys = new Set();
		builder.build().getElements().forEach(element => {
			const fields = element.getFields().filter(field => {
				const fieldParams = field.getAdditionalParameters() || {};
				if (fieldParams.hasOwnProperty('type')) {
					const value = field.getOriginalValue();
					if (!value) {
						// remove empty fields
						return false;
					}

					if (fieldParams.type == 'translated_field') {
						const key = JSON.stringify({ table: fieldParams.table, field: fieldParams.element, value: value });
						if (translatedFields.has(key)) {
							return false;
						}
					}

					return true;
				}

				// remove duplicate UI messages
				const key = fieldParams.key || field.getOriginalValue();
				if (uiMessageKeys.has(key)) {
					return false;
				}
				
				uiMessageKeys.add(key);
				return true;		
			});

			element.setFields(fields);
			if (fields.length > 0) {
				result.processElement(element);
			}
		});

		return result.build();
	},

	saveTranslatedContent: function (documentContentObject) {
		global.LFArtifactProcessorSNC.prototype.saveTranslatedContent.apply(this, arguments);
		new x_376096_lfp_apps.MetadataLocalizationProcessor().saveTranslatedContent(documentContentObject);
	},

	category: 'localization_framework',
    type: 'AppLocalizationProcessor'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>markus.kraus</sys_created_by>
        <sys_created_on>2024-05-31 19:12:03</sys_created_on>
        <sys_id>350c4049c3e20210754fbfddd40131fb</sys_id>
        <sys_mod_count>25</sys_mod_count>
        <sys_name>AppLocalizationProcessor</sys_name>
        <sys_package display_value="Localization Framework+ Scoped Apps" source="x_376096_lfp_apps">2e7fca8fc3924210754fbfddd401310d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Localization Framework+ Scoped Apps">2e7fca8fc3924210754fbfddd401310d</sys_scope>
        <sys_update_name>sys_script_include_350c4049c3e20210754fbfddd40131fb</sys_update_name>
        <sys_updated_by>markus.kraus</sys_updated_by>
        <sys_updated_on>2024-07-29 19:43:12</sys_updated_on>
    </sys_script_include>
</record_update>
